#params for state 1#
#mean#
u_st1 <- 50#
#sd#
sd_1 <- 50#
#number of points#
n_1 <- 25
u_st2 <- 800#
sd_2 <- 10#
n_2 <- 25#
#
#number of cycles#
cycles <- 7#
# Create a vector of data that is just state 1 pasted onto state 2 with some "randomeness" associated with each state #
#
m <- c(abs(rnorm(n_1, mean=u_st1, sd=sd_1)), abs(rnorm(n_2, mean=u_st2, sd=sd_2)))#
# create a covariate basically the index that the data point occurs in the cycle#
index <- 1:length(m)#
for(i in 1:(cycles-1)){#
    x <- c(abs(rnorm(n_1, mean=u_st1, sd=sd_1)), abs(rnorm(n_2, mean=u_st2, sd=sd_2)))#
    m <- c(m, x)#
    index <- c(index, 1:length(x))#
}#
plot(m, type="b", ylim = rev(range(m)))#
#plot(diff(m), type="b")#
plot(index, type="b")
cat("#
    model#
{#
#
    first.loc[1] <- y[1]#
    #    DCRWS model from Ian D Jonsen, Joanna Mills Flemming and Ransom A Myers#
    #    Robust state-space modeling of animal movement data#
    #    ijonsen@dal.ca#
    #    Created by Ian Jonsen, 10/29/2004, last modified, 01/08/2013#
    ## priors on process uncertainty#
    proTau ~ dgamma(0.001,0.001);#
    proSig <- 1/sqrt(proTau);#
    # Gamma represent the movement rates / time#
    gamma[1] ~ dnorm(0, 1)T(0,);   ## prior for gamma in b=1#
    dev ~ dnorm(0, 1)T(0,);			## rnd deviate to ensure gamma[2] > gamma[1]#
    gamma[2] <- gamma[1] + dev; #
    alpha[1] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 1 at t-1#
    alpha[2] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 2 at t-1#
    lambda[1] ~ dunif(0, 1);#
    lambda[2] <- 1 - lambda[1];#
    b[1] ~ dcat(lambda[]); 		## assign b for first obs#
    ## Priors for first location#
    x[1] ~ dnorm(first.loc[1],0.01);#
    ## Assume simple random walk to estimate 2nd regular position#
    x[2] ~ dnorm(x[1], proTau);#
    #for(i in 1:2) {#
        #coef.1[i]~dnorm(0,1);#
        #coef.2[i]~dnorm(0,1);#
    #}#
    ## Transition equation#
    ##	Measurement equation#
    obsTau ~ dgamma(0.001,0.001);#
    obsSig <- 1/sqrt(obsTau);    #
    for(t in 2:(RegN-1)){#
        phi[t,1] <- alpha[b[t-1]];#
        phi[t,2] <- 1 - alpha[b[t-1]];#
        b[t] ~ dcat(phi[t,]); # b[t] is the categorical state#
        #pred.x[t] <- gamma[b[t]];#
            #+ coef.1[b[t]]*covar1[t];#
            #+ coef.2[b[t]]*covar2[t];  #
        y[t] ~ dnorm(gamma[b[t]],obsTau);      	#
        #x[t+1] ~ dnorm(pred.x[t], proTau);	#
    }#
}#
    ", file = "model2.txt")
y = m#
covar1 = index#
#
RegN = length(y) # don't change this line#
#
jags.data = list("y"=y,"RegN"=RegN)#
                 #,"covar1"=covar1)#
                 #"covar2"=covar2)#
jags.params=c("b","x")#
              #,"coef.1")#
              #"coef.2")
jags.params=c("b")#
              #,"coef.1")#
              #"coef.2")
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)
library(R2jags)
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)
#MCMC paramaters#
mcmc.chainLength <- as.integer(6000)  # post-burn #
mcmc.burn <- as.integer(5000) #
mcmc.thin = 1#
mcmc.chains = 1
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)
attach.jags(sim.model)
plot(m, type="b", ylim=rev(range(m)))#
plot(apply(b,2,mean), type="b")
m
plot(m)
plot(m, type="b", ylim=rev(range(m)))
plot(apply(b,2,mean), type="b")
plot(m, type="b", ylim=rev(range(m)))#
lines(apply(b,2,mean), type="b",col='blue')
jags.params=c("b","gamma")#
              #,"coef.1")#
              #"coef.2")
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)
cat("#
    model#
{#
#
    first.loc[1] <- y[1]#
    #    DCRWS model from Ian D Jonsen, Joanna Mills Flemming and Ransom A Myers#
    #    Robust state-space modeling of animal movement data#
    #    ijonsen@dal.ca#
    #    Created by Ian Jonsen, 10/29/2004, last modified, 01/08/2013#
    ## priors on process uncertainty#
    proTau ~ dgamma(0.001,0.001);#
    proSig <- 1/sqrt(proTau);#
    # Gamma represent the movement rates / time#
    gamma[1] ~ dnorm(0, 1)T(0,);   ## prior for gamma in b=1#
    dev ~ dnorm(0, 1)T(0,);			## rnd deviate to ensure gamma[2] > gamma[1]#
    gamma[2] <- gamma[1] + dev; #
    alpha[1] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 1 at t-1#
    alpha[2] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 2 at t-1#
    lambda[1] ~ dunif(0, 1);#
    lambda[2] <- 1 - lambda[1];#
    b[1] ~ dcat(lambda[]); 		## assign b for first obs#
    ## Priors for first location#
    x[1] ~ dnorm(first.loc[1],0.01);#
    ## Assume simple random walk to estimate 2nd regular position#
    x[2] ~ dnorm(x[1], proTau);#
    #for(i in 1:2) {#
        #coef.1[i]~dnorm(0,1);#
        #coef.2[i]~dnorm(0,1);#
    #}#
    pred.x[1] <- gamma[b[1]];#
    ## Transition equation#
    ##	Measurement equation#
    obsTau ~ dgamma(0.001,0.001);#
    obsSig <- 1/sqrt(obsTau);    #
    for(t in 2:(RegN-1)){#
        phi[t,1] <- alpha[b[t-1]];#
        phi[t,2] <- 1 - alpha[b[t-1]];#
        b[t] ~ dcat(phi[t,]); # b[t] is the categorical state#
        #pred.x[t] <- gamma[b[t]];#
            #+ coef.1[b[t]]*covar1[t];#
            #+ coef.2[b[t]]*covar2[t]; #
        pred.x[t] <- gamma[b[t]];#
        y[t] ~ dnorm(gamma[b[t]],obsTau);      	#
        #x[t+1] ~ dnorm(pred.x[t], proTau);	#
    }#
}#
    ", file = "model2.txt")#
#
#MCMC paramaters#
mcmc.chainLength <- as.integer(6000)  # post-burn #
mcmc.burn <- as.integer(5000) #
mcmc.thin = 1#
mcmc.chains = 1
y = m#
covar1 = index#
#
RegN = length(y) # don't change this line#
#
jags.data = list("y"=y,"RegN"=RegN)#
                 #,"covar1"=covar1)#
                 #"covar2"=covar2)#
jags.params=c("b","gamma")#
              #,"coef.1")#
              #"coef.2")
jags.params=c("b","x")#
              #,"coef.1")#
              #"coef.2")
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)
jags.params=c("b","pred.x")#
              #,"coef.1")#
              #"coef.2")#
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)  #
#
attach.jags(sim.model)
plot(m, type="b", ylim=rev(range(m)))
dim(pred.x)
apply(pred.x,2,mean)
pred.x[1,]
pred.x[2,]
RegN
dim(pred.x)
pred.x[,1]
hist(pred.x[,1])
hist(pred.x[,2])
apply(pred.x,2,mean)
plot(apply(pred.x,2,mean))
y
plot(y)
cat("#
    model#
{#
#
    first.loc[1] <- y[1]#
    #    DCRWS model from Ian D Jonsen, Joanna Mills Flemming and Ransom A Myers#
    #    Robust state-space modeling of animal movement data#
    #    ijonsen@dal.ca#
    #    Created by Ian Jonsen, 10/29/2004, last modified, 01/08/2013#
    ## priors on process uncertainty#
    proTau ~ dgamma(0.001,0.001);#
    proSig <- 1/sqrt(proTau);#
    # Gamma represent the movement rates / time#
    #gamma[1] ~ dnorm(0, 1)T(0,);   ## prior for gamma in b=1#
    #dev ~ dnorm(0, 1)T(0,);			## rnd deviate to ensure gamma[2] > gamma[1]#
    #gamma[2] <- gamma[1] + dev; #
    gamma[1] ~ dunif(0,1000);#
    dev ~ dunif(0,1000);#
    gamma[2] <- gamma[1] + dev;#
    alpha[1] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 1 at t-1#
    alpha[2] ~ dbeta(1, 1);		## prob of being in b 1 at t, given in b 2 at t-1#
    lambda[1] ~ dunif(0, 1);#
    lambda[2] <- 1 - lambda[1];#
    b[1] ~ dcat(lambda[]); 		## assign b for first obs#
    ## Priors for first location#
    x[1] ~ dnorm(first.loc[1],0.01);#
    ## Assume simple random walk to estimate 2nd regular position#
    x[2] ~ dnorm(x[1], proTau);#
    #for(i in 1:2) {#
        #coef.1[i]~dnorm(0,1);#
        #coef.2[i]~dnorm(0,1);#
    #}#
    pred.x[1] <- gamma[b[1]];#
    ## Transition equation#
    ##	Measurement equation#
    obsTau ~ dgamma(0.001,0.001);#
    obsSig <- 1/sqrt(obsTau);    #
    for(t in 2:(RegN-1)){#
        phi[t,1] <- alpha[b[t-1]];#
        phi[t,2] <- 1 - alpha[b[t-1]];#
        b[t] ~ dcat(phi[t,]); # b[t] is the categorical state#
        #pred.x[t] <- gamma[b[t]];#
            #+ coef.1[b[t]]*covar1[t];#
            #+ coef.2[b[t]]*covar2[t]; #
        pred.x[t] <- gamma[b[t]];#
        y[t] ~ dnorm(gamma[b[t]],obsTau);      	#
        #x[t+1] ~ dnorm(pred.x[t], proTau);	#
    }#
}#
    ", file = "model2.txt")#
#
#MCMC paramaters#
mcmc.chainLength <- as.integer(6000)  # post-burn #
mcmc.burn <- as.integer(5000) #
mcmc.thin = 1#
mcmc.chains = 1#
y = m#
covar1 = index#
#
RegN = length(y) # don't change this line#
#
jags.data = list("y"=y,"RegN"=RegN)#
                 #,"covar1"=covar1)#
                 #"covar2"=covar2)#
jags.params=c("b","pred.x")#
              #,"coef.1")#
              #"coef.2")#
model.loc=("model2.txt")#
sim.model = jags(jags.data, inits=NULL, parameters.to.save= jags.params, model.file=model.loc, n.chains = mcmc.chains, n.burnin = mcmc.burn, n.thin = mcmc.thin, n.iter = mcmc.chainLength, DIC = TRUE)  #
#
attach.jags(sim.model)
plot(apply(pred.x,2,mean))
plot(m, type="b", ylim=rev(range(m)),col="black")#
#lines(apply(b,2,mean), type="b",col='blue')#
lines(apply(pred.x,2,mean),col="blue",lty=2)
69/5471
5/(80*12)
1/0.005
setwd("/users/eric.ward/downloads")#
#
landMammals = read.csv("landMammals.csv")
landMammals
landMammals$Estimated.Pounds.Harvested
hist(landMammals$Estimated.Pounds.Harvested)
hist(log(landMammals$Estimated.Pounds.Harvested))
library(lme4)
landMammals$Average.Lbs.Harvested.per.Household/landMammals$Estimated.Pounds.Harvested
hist(landMammals$Average.Lbs.Harvested.per.Household/landMammals$Estimated.Pounds.Harvested)
(1/landMammals$Average.Lbs.Harvested.per.Household)*landMammals$Estimated.Pounds.Harvested
landMammals$Houses = (1/landMammals$Average.Lbs.Harvested.per.Household)*landMammals$Estimated.Pounds.Harvested
landMammals$Houses
names(landMammals)
lmer(logHarvest ~ (1|Community.Name)+(Study.Year|Community.Name))
lmer(logHarvest ~ (1|Community.Name)+(Study.Year|Community.Name),data=landMammals)
# Catch ~ year + log(effort)#
landMammals$logHarvest = log(landMammals$Estimated.Pounds.Harvested)#
library(lme4)#
#
landMammals$Houses = (1/landMammals$Average.Lbs.Harvested.per.Household)*landMammals$Estimated.Pounds.Harvested#
#
lmer(logHarvest ~ (1|Community.Name)+(Study.Year|Community.Name),data=landMammals)
lmer(logHarvest ~ (Study.Year|Community.Name),data=landMammals)
lmer(logHarvest ~ (1|Community.Name),data=landMammals)
lmer(logHarvest ~ (1|Community.Name) + Study.Year,data=landMammals)
lmer(logHarvest ~ (Study.Year|Community.Name) + Study.Year,data=landMammals)
lmer(logHarvest ~ (Study.Year|Community.Name) + Study.Year + log(Houses),data=landMammals)
lmer(logHarvest ~ (1|Community.Name) + Study.Year + log(Houses),data=landMammals)
lm(logHarvest ~ Community.Name + Study.Year + log(Houses),data=landMammals)
summary(lm(logHarvest ~ Community.Name + Study.Year + log(Houses),data=landMammals))
summary(lm(logHarvest ~ Community.Name * Study.Year + log(Houses),data=landMammals))
AIC(lm(logHarvest ~ Community.Name * Study.Year + log(Houses),data=landMammals))
AIC(lm(logHarvest ~ Community.Name + Study.Year + log(Houses),data=landMammals))
lm(logHarvest ~ Community.Name + Study.Year + log(Houses),data=landMammals)
library(hierfstat)#
setwd("/users/eric.ward/dropbox/Robin")#
#
LOCI = 1000 # don't change #
N = 2000#
run = "microsat_n1000_loci200_states20"#
run = "microsat_n1000_loci200_states10"#
run = "snp_n1000_loci1000_states2"#
genfile = paste("easypop_data/",run,".gen",sep="")#
#datfile = paste("easypop_data/",run,".dat",sep="")#
#
d = read.table(genfile,sep="\t")#
#
# Read in the genotype file from easypop#
genotypes = matrix("",N,LOCI)#
for(i in 1:N) {#
   # read in #
   #genotypes[i,] = scan(genfile,skip=(i-1),what="list",nlines=1)[-c(1:2)]#
   #genotypes[i,] = unlist(strsplit(as.character(d[i,])," "))[-c(1:5)]#
   a = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],2,2))#
   b = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],4,4))#
   genotypes[i,] = paste(a,b,sep="")#
}#
genotypes = apply(genotypes,2,as.numeric)#
genotypes = as.data.frame(genotypes)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))
library(hierfstat)#
setwd("/users/eric.ward/dropbox/Robin")#
rm(list=ls())#
#
LOCI = 1000 # don't change #
N = 2000#
run = "microsat_n1000_loci200_states20"#
run = "microsat_n1000_loci200_states10"#
run = "snp_n1000_loci1000_states2"#
genfile = paste("easypop_data/",run,".gen",sep="")#
#datfile = paste("easypop_data/",run,".dat",sep="")#
#
d = read.table(genfile,sep="\t")#
#
# Read in the genotype file from easypop#
genotypes = matrix("",N,LOCI)#
for(i in 1:N) {#
   # read in #
   #genotypes[i,] = scan(genfile,skip=(i-1),what="list",nlines=1)[-c(1:2)]#
   #genotypes[i,] = unlist(strsplit(as.character(d[i,])," "))[-c(1:5)]#
   a = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],2,2))#
   b = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],4,4))#
   genotypes[i,] = paste(a,b,sep="")#
}#
genotypes = apply(genotypes,2,as.numeric)#
genotypes = as.data.frame(genotypes)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
#
for(ii in 1:dim(scenarios)[1]) {#
print(ii)#
mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
nSampled = scenarios$samples[ii]#
sampledLoci = scenarios$nloci[ii]#
#
weights = c(mixPop1, 1-mixPop1)#
sampledAnimals = ceiling(nSampled * weights)
library(hierfstat)#
setwd("/users/eric.ward/dropbox/Robin")#
rm(list=ls())#
#
LOCI = 1000 # don't change #
N = 2000#
run = "microsat_n1000_loci200_states20"#
run = "microsat_n1000_loci200_states10"#
run = "snp_n1000_loci1000_states2"#
genfile = paste("easypop_data/",run,".gen",sep="")#
#datfile = paste("easypop_data/",run,".dat",sep="")#
#
d = read.table(genfile,sep="\t")#
#
# Read in the genotype file from easypop#
genotypes = matrix("",N,LOCI)#
for(i in 1:N) {#
   # read in #
   #genotypes[i,] = scan(genfile,skip=(i-1),what="list",nlines=1)[-c(1:2)]#
   #genotypes[i,] = unlist(strsplit(as.character(d[i,])," "))[-c(1:5)]#
   a = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],2,2))#
   b = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],4,4))#
   genotypes[i,] = paste(a,b,sep="")#
}#
genotypes = apply(genotypes,2,as.numeric)#
genotypes = as.data.frame(genotypes)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))
library(hierfstat)#
setwd("/users/eric.ward/dropbox/Robin")#
rm(list=ls())#
#
LOCI = 1000 # don't change #
N = 2000#
run = "microsat_n1000_loci200_states20"#
run = "microsat_n1000_loci200_states10"#
run = "snp_n1000_loci1000_states2"#
genfile = paste("easypop_data/",run,".gen",sep="")#
#datfile = paste("easypop_data/",run,".dat",sep="")#
#
d = read.table(genfile,sep="\t")#
#
# Read in the genotype file from easypop#
genotypes = matrix("",N,LOCI)#
for(i in 1:N) {#
   # read in #
   #genotypes[i,] = scan(genfile,skip=(i-1),what="list",nlines=1)[-c(1:2)]#
   #genotypes[i,] = unlist(strsplit(as.character(d[i,])," "))[-c(1:5)]#
   a = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],2,2))#
   b = (substr(unlist(strsplit(as.character(d[i,])," "))[-c(1:5)],4,4))#
   genotypes[i,] = paste(a,b,sep="")#
}#
genotypes = apply(genotypes,2,as.numeric)#
genotypes = as.data.frame(genotypes)
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))
ii=1
print(ii)#
mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
nSampled = scenarios$samples[ii]#
sampledLoci = scenarios$nloci[ii]
weights = c(mixPop1, 1-mixPop1)#
sampledAnimals = ceiling(nSampled * weights)#
#
SIMS = 1000#
output = list()#
for(i in 1:SIMS) {#
   # Generate constant samples of same size from pop 1 and 2#
   animals = sample(seq(1,N/2), size = sampledAnimals[1], replace=F)#
   animals2 = sample(seq(N/2+1,N), size = sampledAnimals[2], replace=F)   #
   # Generate random sample of loci from the populations -- same loci#
   loci = sample(seq(1,LOCI), size = sampledLoci, replace=F)#
   # Subset original data#
   subset = genotypes[,loci]#
   subset = subset[c(animals,animals2),]#
   subset$pop = rep(c(1,2),sampledAnimals) # pop identifier#
   # re-order data frame#
   subset = subset[,c(dim(subset)[2], 1:(dim(subset)[2]-1))]#
   # calculate f-statistics#
   output[[i]] = wc(subset)#
#
}
?wc
wc(subset)
i=1
# Generate constant samples of same size from pop 1 and 2#
   animals = sample(seq(1,N/2), size = sampledAnimals[1], replace=F)#
   animals2 = sample(seq(N/2+1,N), size = sampledAnimals[2], replace=F)   #
   # Generate random sample of loci from the populations -- same loci#
   loci = sample(seq(1,LOCI), size = sampledLoci, replace=F)#
   # Subset original data#
   subset = genotypes[,loci]#
   subset = subset[c(animals,animals2),]#
   subset$pop = rep(c(1,2),sampledAnimals) # pop identifier#
   # re-order data frame#
   subset = subset[,c(dim(subset)[2], 1:(dim(subset)[2]-1))]#
   # calculate f-statistics#
   output[[i]] = wc(subset)
wc(subset)
subset
?wc
data(gtrunchier)
gtrunchier
class(gtrunchier)
class(gtrunchier[,2])
class(gtrunchier[,3])
class(gtrunchier[,4])
class(gtrunchier[,5])
class(gtrunchier[,6])
gtrunchier[,6]
class(gtrunchier[,6])
subset
subset[,2]
class(subset[,2])
subset = as.integer(subset)
subset[,2] = as.integer(subset[,2])
dim(subset)
for(i in 2:11) {subset[,i] = as.integer(subset[,i])}
subset
class(gtrunchier[,1])
wc(subset)
?wc
library(Demerelate)
data(demerelpop)
install.packages("data(demerelpop)")
install.packages("Demerelate")
library(Demerelate)
install.packages("lmtest")
library(Demerelate)
library(lmtest)
citation(hierfstat)
library(hierfstat)
citation(hierfstat)
citation('hierfstat')
library(adegenet)#
library(genetics)
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01 Fis v Fst_mixing.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.1,na.rm=T)#
    uppery[ii] = quantile(cors,0.9,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.1,na.rm=T)#
    uppery[ii] = quantile(cors,0.9,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01 Fis v Fst_mixing.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01b.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("30% mixing (100 loci)","30% mixing (200 loci)"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',"(a)",cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("30% mixing (10 loci)","30% mixing (20 loci)"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',"(b)",cex=1.2)#
#
dev.off()
#############################################################################################################
# Figure 2. Plot showing effects of increasing Fst  #
# Y is correlation between Fis / Fst#
# Make stacked plot with SNP on top, and 10-allele state on the bottom#
#############################################################################################################
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_50"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_300"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
######################calculate allele 10#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_55"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y4 = y#
lowery4=lowery#
uppery4=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y5 = y#
lowery5=lowery#
uppery5=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_375"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y6 = y#
lowery6=lowery#
uppery6=uppery#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 02 Fis v Fst_trueFst.pdf")#
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 3. Estimate slope for Zhivotovsky paper  #
# Is relationship 1:1? #
#############################################################################################################
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 03 Zhivitovsky slopes.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 4. Estimate correlation between correlations#
#############################################################################################################
library(grDevices)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 04 Correlation Fst1Fst2.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))-0*spacing, y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_125") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[ST[1]],"*",hat(F)[ST[2]]," and ",r^2,sep="")),side=2,outer=T,padj=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 6. Estimate correlation between correlations#
#############################################################################################################
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
#
run = "allele20_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
col3 = "black"#
col2 = "grey30"#
col1 = "grey50"#
# Plot will have numbered of alleles scored on x axis#
# 1000, 2000, 4000#
# #
pdf("/Users/eric.ward/Dropbox/Fst_Fit_correlation project/Figure 05 alleles scored.pdf")#
spacing = 0.07#
plot(c(0,0),col="white", ylim=c(-0.1,1), xlim=c(0,2.5), axes=F, ylab="",xlab="Alleles scored")#
axis(1, at = c(0.25, 1.25, 2.25), c("1000","2000","4000"))#
axis(2)#
box()#
this.x = 0.25#
points(this.x-2*spacing, y1[10],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[10],uppery1[10]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[10],"100/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[27],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[27],uppery1[27]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[27],"50/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[10],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[10],uppery2[10]),col=col2,lwd=2)#
text(this.x-0,uppery2[10],"100/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[27],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[27],uppery2[27]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[27],"50/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[7],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[7],uppery3[7]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[7],"10/100",srt=90,adj=-0.1,cex=0.9)#
#
this.x = 1.25#
points(this.x-2*spacing, y1[11],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[11],uppery1[11]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[11],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[28],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[28],uppery1[28]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[28],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[11],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[11],uppery2[11]),col=col2,lwd=2)#
text(this.x-0,uppery2[11],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[28],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[28],uppery2[28]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[28],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[8],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[8],uppery3[8]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[8],"20/100",srt=90,adj=-0.1,cex=0.9)#
points(this.x+3*spacing, y3[25],col=col3,lwd=3)#
lines(rep(this.x+3*spacing,2), c(lowery3[25],uppery3[25]),col=col3,lwd=2)#
text(this.x+3*spacing,uppery3[25],"10/200",srt=90,adj=-0.1,cex=0.9)#
#
this.x = 2.25#
points(this.x-2*spacing, y1[12],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[12],uppery1[12]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[12],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[29],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[29],uppery1[29]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[29],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[12],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[12],uppery2[12]),col=col2,lwd=2)#
text(this.x-0,uppery2[12],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[29],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[29],uppery2[29]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[29],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[26],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[26],uppery3[26]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[26],"20/100",srt=90,adj=-0.1,cex=0.9)#
#
legend('bottomright',c("10 states","20 states","2 states"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
dev.off()
#############################################################################################################
# Figure 1. Violin plot of log(sample size) on x-axis#
# Y is correlation between Fis / Fst#
# Make stacked plot with SNP on top, and 10-allele state on the bottom#
#############################################################################################################
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01 Fis v Fst_mixing.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#
#############################################################################################################
# Figure 1b. Plot showing effects of increasing sampling #
# Y is correlation between Fis / Fst#
# Make stacked plot with SNP on top, and 10-allele state on the bottom#
#############################################################################################################
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01b.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("30% mixing (100 loci)","30% mixing (200 loci)"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',"(a)",cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("30% mixing (10 loci)","30% mixing (20 loci)"),col=c(col2,col3),#
#lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',"(b)",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 2. Plot showing effects of increasing Fst  #
# Y is correlation between Fis / Fst#
# Make stacked plot with SNP on top, and 10-allele state on the bottom#
#############################################################################################################
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_50"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_300"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
######################calculate allele 10#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_55"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y4 = y#
lowery4=lowery#
uppery4=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y5 = y#
lowery5=lowery#
uppery5=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_375"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:6) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y6 = y#
lowery6=lowery#
uppery6=uppery#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 02 Fis v Fst_trueFst.pdf")#
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 3. Estimate slope for Zhivotovsky paper  #
# Is relationship 1:1? #
#############################################################################################################
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 03 Zhivitovsky slopes.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 4. Estimate correlation between correlations#
#############################################################################################################
library(grDevices)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 04 Correlation Fst1Fst2.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))-0*spacing, y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_125") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[ST[1]],"*",hat(F)[ST[2]]," and ",r^2,sep="")),side=2,outer=T,padj=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)#
#
dev.off()#
#############################################################################################################
# Figure 6. Estimate correlation between correlations#
#############################################################################################################
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
#
run = "allele20_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
col3 = "black"#
col2 = "grey30"#
col1 = "grey50"#
# Plot will have numbered of alleles scored on x axis#
# 1000, 2000, 4000#
# #
pdf("/Users/eric.ward/Dropbox/Fst_Fit_correlation project/Figure 05 alleles scored.pdf")#
spacing = 0.07#
plot(c(0,0),col="white", ylim=c(-0.1,1), xlim=c(0,2.5), axes=F, ylab="",xlab="Alleles scored")#
axis(1, at = c(0.25, 1.25, 2.25), c("1000","2000","4000"))#
axis(2)#
box()#
this.x = 0.25#
points(this.x-2*spacing, y1[10],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[10],uppery1[10]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[10],"100/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[27],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[27],uppery1[27]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[27],"50/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[10],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[10],uppery2[10]),col=col2,lwd=2)#
text(this.x-0,uppery2[10],"100/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[27],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[27],uppery2[27]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[27],"50/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[7],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[7],uppery3[7]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[7],"10/100",srt=90,adj=-0.1,cex=0.9)#
#
this.x = 1.25#
points(this.x-2*spacing, y1[11],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[11],uppery1[11]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[11],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[28],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[28],uppery1[28]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[28],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[11],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[11],uppery2[11]),col=col2,lwd=2)#
text(this.x-0,uppery2[11],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[28],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[28],uppery2[28]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[28],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[8],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[8],uppery3[8]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[8],"20/100",srt=90,adj=-0.1,cex=0.9)#
points(this.x+3*spacing, y3[25],col=col3,lwd=3)#
lines(rep(this.x+3*spacing,2), c(lowery3[25],uppery3[25]),col=col3,lwd=2)#
text(this.x+3*spacing,uppery3[25],"10/200",srt=90,adj=-0.1,cex=0.9)#
#
this.x = 2.25#
points(this.x-2*spacing, y1[12],col=col1,lwd=3)#
lines(rep(this.x-2*spacing,2), c(lowery1[12],uppery1[12]),col=col1,lwd=2)#
text(this.x-2*spacing,uppery1[12],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x-spacing, y1[29],col=col1,lwd=3)#
lines(rep(this.x-spacing,2), c(lowery1[29],uppery1[29]),col=col1,lwd=2)#
text(this.x-spacing,uppery1[29],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x-0, y2[12],col=col2,lwd=3)#
lines(rep(this.x-0,2), c(lowery2[12],uppery2[12]),col=col2,lwd=2)#
text(this.x-0,uppery2[12],"200/10",srt=90,adj=-0.1,cex=0.9)#
points(this.x+spacing, y2[29],col=col2,lwd=3)#
lines(rep(this.x+spacing,2), c(lowery2[29],uppery2[29]),col=col2,lwd=2)#
text(this.x+spacing,uppery2[29],"100/20",srt=90,adj=-0.1,cex=0.9)#
points(this.x+2*spacing, y3[26],col=col3,lwd=3)#
lines(rep(this.x+2*spacing,2), c(lowery3[26],uppery3[26]),col=col3,lwd=2)#
text(this.x+2*spacing,uppery3[26],"20/100",srt=90,adj=-0.1,cex=0.9)#
#
legend('bottomright',c("10 states","20 states","2 states"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
dev.off()
5*10^-4
0.0005
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01 Fis v Fst_mixing.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01 Fis v Fst_mixing.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))
scenarios
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_50"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_300"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
######################calculate allele 10#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_55"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y4 = y#
lowery4=lowery#
uppery4=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y5 = y#
lowery5=lowery#
uppery5=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_375"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y6 = y#
lowery6=lowery#
uppery6=uppery
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs, m = 0.3",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci, m = 0.3",cex=1.2)
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 02 Fis v Fst_trueFst.pdf")#
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs, m = 0.3",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci, m = 0.3",cex=1.2)#
#
dev.off()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs",cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci",cex=1.2)
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep=""))",cex=1.2)
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 03 Zhivitovsky slopes.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
getwd()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 03 Zhivitovsky slopes.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_200") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  lhs = output[[1]][,3] - output[[1]][,6] # LHS of Zhivotovsky#
  rhs = output[[1]][,4] # RHS of Zhivotovsky  #
  coefs = 0#
  for(j in 1:1000) {#
    lhs = c(output[[j]][,3] - output[[j]][,6])#
    rhs = c(output[[j]][,4])  #
    indx = which(is.na(lhs+rhs)==FALSE & is.finite(lhs+rhs)==TRUE)#
    coefs[j] = as.numeric(try(coef(lm(log(lhs)~-1+log(rhs))), silent=TRUE))#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery,1.05),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext("Slope estimate", side=2,outer=T,padj=2)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2), c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
library(grDevices)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 04 Correlation Fst1Fst2.pdf")#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
#run = "allele10state_200"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))-0*spacing, y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.1","m = 0.3","m = 0.5"),col=c(col1,col2,col3),#
       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
run = "allele10_125"#
SNP = FALSE#
if(run== "snp_125") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
#
for(ii in 1:36) {#
  mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
  nSampled = scenarios$samples[ii]#
  sampledLoci = scenarios$nloci[ii]#
  load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
  coefs = 0#
  for(j in 1:1000) {#
    coefs[j] = output[[j]][1,7]#
  }#
  y[ii] = mean(coefs,na.rm=T)#
  lowery[ii] = quantile(coefs,0.05,na.rm=T)#
  uppery[ii] = quantile(coefs,0.95,na.rm=T)#
}#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-2*spacing, y[1:6], col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery),na.rm=T), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y[7:12],col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y[13:18],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[ST[1]],"*",hat(F)[ST[2]]," and ",r^2,sep="")),side=2,outer=T,padj=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
  lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery[i],uppery[i]),lwd=2,lty=1, col=col1)#
}#
for(i in 7:12) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-0*spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
for(i in 13:18) {#
  lines(rep(log(c(10,20,50,100,200,400))[i-12],2)+2*spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("10% mixing","30% mixing","50% mixing"),col=c(col1,col2,col3),#
#       lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01b.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("m = 0.3 (100 loci)","m = 0.3 (200 loci)"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
#legend('bottomright',c("30% mixing (10 loci)","30% mixing (20 loci)"),col=c(col2,col3),#
#lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 01b.pdf")#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	  y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
par(mfrow=c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
#
spacing = 0.04#
col3 = "black"#
col2 = "grey40"#
col1 = "grey60"#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("100 loci","200 loci"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',expression(paste("(a) 100 SNPs, m = 0.3, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
#alleles with 10 states#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
	y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
plot(log(c(10,20,50,100,200,400))-spacing, y[7:12], col=col2, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=range(c(y,lowery,uppery)), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400))+spacing, y[25:30],col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")), side = 2, outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 7:12) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-6],2)-spacing, c(lowery[i],uppery[i]), col = col2,lwd=2,lty=1)#
}#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 25:30) {#
	lines(rep(log(c(10,20,50,100,200,400))[i-24],2)+spacing, c(lowery[i],uppery[i]), col = col3,lwd=2,lty=1)#
}#
legend('bottomright',c("10 loci","20 loci"),col=c(col2,col3),#
lwd=c(3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21))#
legend('topleft',bty='n',expression(paste("(b) 10 msat loci, m = 0.3, ",F[ST]," = 0.05",sep="")),cex=1.2)#
#
dev.off()
FST = "0.025"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}
y1
y2
y3
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}
y1
y2
y3
round(y1,2)
round(y1,3)
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}
pasteStr(y1)
pasteStr(round(y1,3))
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
run = "snp_140"#
SNP = FALSE#
if(run== "snp_140") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}
y
FST = "0.05"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}#
#
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}#
#
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
FST = "0.1"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}#
#
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}#
#
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
FST = "0.1"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    #for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    for(k in 1:1000) cors[k] = output[[k]][1,7]#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}#
#
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}#
#
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
FST = "0.05"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    #for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    for(k in 1:1000) cors[k] = output[[k]][1,7]#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}#
#
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}#
#
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
FST = "0.025"#
#
setwd(paste("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_",FST,sep=""))#
#
#run = "microsat_n1000_loci200_states20"#
#run = "snp_n1000_loci1000_states2"#
#run = "microsat_n1000_loci200_states10"#
y1 = matrix(0, 36, 3)#
y2 = matrix(0, 36, 3)#
y3 = matrix(0, 36, 3)#
for(iii in 1:3) {#
if(iii==1) {#
	if(FST=="0.025") run = "allele10_55"#
	if(FST=="0.05") run = "allele10_125"#
	if(FST=="0.1") run = "allele10_375"#
}#
if(iii==2) {#
	if(FST=="0.025") run = "allele20_55"	#
	if(FST=="0.05") run = "allele20_125"	#
	if(FST=="0.1") run = "allele20_375"#
}#
if(iii==3) {#
	if(FST=="0.025") run = "snp_50"#
	if(FST=="0.05") run = "snp_140"	#
	if(FST=="0.1") run = "snp_300"#
}#
#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 1:36) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,paste("_mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
    # calculate correlation between Fst and Fis, +/- SE#
    #cors = unlist(lapply(output,cor,use="pairwise.complete"))[seq(2,4000,4)]#
    cors = 0#
    #for(k in 1:1000) {cors[k] = cor(output[[k]][,1:2])[1,2]}#
    for(k in 1:1000) cors[k] = output[[k]][1,7]#
    y[ii] = median(cors,na.rm=T)#
    lowery[ii] = quantile(cors,0.05,na.rm=T)#
    uppery[ii] = quantile(cors,0.95,na.rm=T)#
}#
#
if(iii==1) {#
y1 = cbind(y,lowery,uppery)#
}#
if(iii==2) {#
y2 = cbind(y,lowery,uppery)#
}#
if(iii==3) {#
y3 = cbind(y,lowery,uppery)#
}#
#
}#
#
pasteStr = function(x) {#
	z = ""#
	for(i in 1:dim(x)[1]) {#
		z[i] = paste(x[i,1]," (",x[i,2],",",x[i,3],")",sep="")#
	}#
	return(z)#
}#
#
cbind(pasteStr(round(y1,3)), pasteStr(round(y2,3)), pasteStr(round(y3,3)))
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_50"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y1 = y#
lowery1=lowery#
uppery1=uppery#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_140"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y2 = y#
lowery2=lowery#
uppery2=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "snp_300"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	cors = 0#
	for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y3 = y#
lowery3=lowery#
uppery3=uppery#
#
######################calculate allele 10#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.025")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_55"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y4 = y#
lowery4=lowery#
uppery4=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.05")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_125"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y5 = y#
lowery5=lowery#
uppery5=uppery#
#
setwd("/users/eric.ward/dropbox/Fst_Fit_correlation project/simulated data/migration/Fst_0.1")#
library(adegenet)#
library(hierfstat)#
#
run = "allele10_375"#
SNP = FALSE#
if(substr(run,1,3)== "snp") SNP = TRUE#
#
# Load in the .gen and .dat files -- same info#
#genfile = paste(run,".gen",sep="")#
detach(package:hierfstat)#
datfile = paste(run,".dat",sep="")#
A <- read.fstat(datfile)#
g2h = genind2hierfstat(A,pop=c(rep(1,500), rep(2,500)))#
#
genotypes = g2h[,-1]#
LOCI = dim(genotypes)[2]#
N = 1000#
#
library(pegas)#
gt = genind2loci(A)#
#
# We want to iterate over (1) sample size, (2) loci, (3) weights#
scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(10,20))#
if(SNP == TRUE) scenarios = expand.grid('samples' = c(10, 20,50,100,200,400), 'mix' = c(0.1,0.3,0.5),'nloci' = c(100,200))#
#
y = 0#
lowery = 0#
uppery = 0#
for(ii in 7:12) {#
	mixPop1 = scenarios$mix[ii]# Do weighted sampling of the two populations to create the mixture#
	nSampled = scenarios$samples[ii]#
	sampledLoci = scenarios$nloci[ii]#
    load(file = paste("output/",run,"_",paste("mix",mixPop1,sep=""),paste("_N",nSampled,sep=""),paste("_n",sampledLoci,sep=""),".Rdata",sep=""))#
    # calculate correlation between Fst and Fis, +/- SE#
	  cors = 0#
	  for(k in 1:1000) {cors[k] = output[[k]][1,7]}#
	  y[ii-6] = median(cors,na.rm=T)#
    lowery[ii-6] = quantile(cors,0.05,na.rm=T)#
    uppery[ii-6] = quantile(cors,0.95,na.rm=T)#
}#
y6 = y#
lowery6=lowery#
uppery6=uppery
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs, m = 0.3",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[IS]," and ",hat(F)[ST],sep="")),side=2,outer=T,padj=1.5)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci, m = 0.3",cex=1.2)
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs, m = 0.3",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[ST[1]],"*",hat(F)[ST[2]]," and ",r^2,sep="")),side=2,outer=T,padj=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci, m = 0.3",cex=1.2)
pdf("/users/eric.ward/dropbox/Fst_Fit_correlation project/Figure 03 Fis v Fst_trueFst.pdf")#
par(mfrow = c(2,1),mgp=c(2,1,0),mai=c(0.7,0.7,0.1,0.1))#
minY = min(c(lowery1,lowery2,lowery3))#
maxY = max(c(uppery1,uppery2,uppery3))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y1, col=col1, xlab = "", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y2,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y3,col=col3,lwd=3,cex=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery1[i],uppery1[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery2[i],uppery2[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery3[i],uppery3[i]), col = col3,lwd=2,lty=1)#
}#
#
legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(a) 100 SNPs, m = 0.3",cex=1.2)#
#
minY = min(c(lowery4,lowery5,lowery6))#
maxY = max(c(uppery4,uppery5,uppery6))#
plot(log(c(10,20,50,100,200,400))-2*spacing, y4, col=col1, xlab = "Individuals sampled", ylab = "",main="",axes=F,cex=1.3,lwd=3,ylim=c(minY,maxY), xlim=c(log(9),log(450)))#
axis(1,at = log(c(10,20,50,100,200,400)),labels = c("10","20","50","100","200","400"))#
axis(2)#
box()#
points(log(c(10,20,50,100,200,400)), y5,col=col2,lwd=3,cex=1.3)#
points(log(c(10,20,50,100,200,400))+2*spacing, y6,col=col3,lwd=3,cex=1.3)#
#
mtext(expression(paste("Correlation between ",hat(F)[ST[1]],"*",hat(F)[ST[2]]," and ",r^2,sep="")),side=2,outer=T,padj=1.3)#
#
# draw lines for 0.25 - 0.75 quantiles#
for(i in 1:6) {#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)-2*spacing, c(lowery4[i],uppery4[i]), col = col1,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2), c(lowery5[i],uppery5[i]), col = col2,lwd=2,lty=1)#
	lines(rep(log(c(10,20,50,100,200,400))[i],2)+2*spacing, c(lowery6[i],uppery6[i]), col = col3,lwd=2,lty=1)#
}#
#
#legend('bottomright',c(expression(paste(F[ST]," = 0.025",sep="")),expression(paste(F[ST]," = 0.05",sep="")),expression(paste(F[ST]," = 0.1",sep=""))),col=c(col1,col2,col3),#
#lwd=c(3,3,3),cex=0.9,bty='n',lty=NA,pch=c(21,21,21))#
legend('topleft',bty='n',"(b) 10 msat loci, m = 0.3",cex=1.2)#
#
dev.off()
